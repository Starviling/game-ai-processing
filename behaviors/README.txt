The project is named behaviors. For more specific intstructions on how to run the
program, please refer to the PDF file for the project and its individual sections.

-behaviors holds the main loop, sets up the program, and records data if behaviorTree is active
    holds the decisionTree, behaviorTree, & learningTree
-Boid holds the representation for the boid and the breadcrumbs associated with it
-astar holds the A* algorithm graph search implementation.
-behavior_tree the behavior tree components and generation
-building_pieces various pieces needed by code not categorized
-decision_tree the decision tree components and generation
-follow holds the logic for following a path generated by shortestpath
-game_state holds the game state
-graph the representation of the graph including the nodes, edges, obstacle generation,
    and how to draw itself
-grid_rooms the representation of the graph of 3 rooms and obstacles
-heuristic holds 5 different heuristics implemented
-id3 holds the algorithm to generate a decision tree based off data
-orientation the orientation of the Boid
-pathfinding holds the details required for path finding and entity generation
-util extraneous methods/classes utilized throughout the project


behaviors, behavior_tree, decision_tree, game_state, id3, util, follow, graph,
greedy, pathfinding, & heuristic hold code based off of lecture material.
astar & dijkstra hold code that is based off of textbook material.